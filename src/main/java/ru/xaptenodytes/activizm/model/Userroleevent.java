package ru.xaptenodytes.activizm.model;

// Generated 24.05.2015 22:32:50 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Userroleevents generated by hbm2java
 */
@Entity
@Table(name = "userroleevents", catalog = "activizm", uniqueConstraints = @UniqueConstraint(columnNames = "userroleId"))
public class Userroleevent implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8213408984410152709L;
	private Integer userroleeventId;
	private Event event;
	private int userroleId;
	private Date eventSignDate;
	private Userrole userrole;

	public Userroleevent() {
	}

	public Userroleevent(Event event, int userroleId, Date eventSignDate) {
		this.event = event;
		this.userroleId = userroleId;
		this.eventSignDate = eventSignDate;
	}

	public Userroleevent(Event event, int userroleId, Date eventSignDate,
			Userrole userrole) {
		this.event = event;
		this.userroleId = userroleId;
		this.eventSignDate = eventSignDate;
		this.userrole = userrole;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userroleeventId", unique = true, nullable = false)
	public Integer getUserroleeventId() {
		return this.userroleeventId;
	}

	public void setUserroleeventId(Integer userroleeventId) {
		this.userroleeventId = userroleeventId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eventId", nullable = false)
	public Event getEvents() {
		return this.event;
	}

	public void setEvents(Event event) {
		this.event = event;
	}

	@Column(name = "userroleId", unique = true, nullable = false)
	public int getUserroleId() {
		return this.userroleId;
	}

	public void setUserroleId(int userroleId) {
		this.userroleId = userroleId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "eventSignDate", nullable = false, length = 19)
	public Date getEventSignDate() {
		return this.eventSignDate;
	}

	public void setEventSignDate(Date eventSignDate) {
		this.eventSignDate = eventSignDate;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "areaofresponsibility")
	public Userrole getUserroles() {
		return this.userrole;
	}

	public void setUserroles(Userrole userrole) {
		this.userrole = userrole;
	}

}
