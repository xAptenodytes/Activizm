package ru.xaptenodytes.activizm.model;

// Generated 19.05.2015 16:37:34 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Activists generated by hbm2java
 */
@Entity
@Table(name = "activists", catalog = "activizm", uniqueConstraints = {
		@UniqueConstraint(columnNames = "cityId"),
		@UniqueConstraint(columnNames = "coordinatorId") })
public class Activist implements java.io.Serializable {

	private Integer activistId;
	private Event event;
	private Phone phone;
	private Schedulewithdate schedulewithdate;
	private Schedulewithweekdays schedulewithweekdays;
	private Integer vkId;
	private Integer fbId;
	private String email;
	private String passwdHash;
	private String surname;
	private String name1;
	private String name2;
	private Date registrDate;
	private Date activateDate;
	private Date desactivateDate;
	private int coordinatorId;
	private Boolean status;
	private Integer cityId;
	private Integer districtId;
	private Coordinator coordinator;
	private City city;

	public Activist() {
	}

	public Activist(Event event, Phone phone,
			Schedulewithdate schedulewithdate,
			Schedulewithweekdays schedulewithweekdays, String passwdHash,
			String surname, String name1, Date registrDate, int coordinatorId) {
		this.event = event;
		this.phone = phone;
		this.schedulewithdate = schedulewithdate;
		this.schedulewithweekdays = schedulewithweekdays;
		this.passwdHash = passwdHash;
		this.surname = surname;
		this.name1 = name1;
		this.registrDate = registrDate;
		this.coordinatorId = coordinatorId;
	}

	public Activist(Event event, Phone phone,
			Schedulewithdate schedulewithdate,
			Schedulewithweekdays schedulewithweekdays, Integer vkId,
			Integer fbId, String email, String passwdHash, String surname,
			String name1, String name2, Date registrDate, Date activateDate,
			Date desactivateDate, int coordinatorId, Boolean status,
			Integer cityId, Integer districtId, Coordinator coordinator,
			City city) {
		this.event = event;
		this.phone = phone;
		this.schedulewithdate = schedulewithdate;
		this.schedulewithweekdays = schedulewithweekdays;
		this.vkId = vkId;
		this.fbId = fbId;
		this.email = email;
		this.passwdHash = passwdHash;
		this.surname = surname;
		this.name1 = name1;
		this.name2 = name2;
		this.registrDate = registrDate;
		this.activateDate = activateDate;
		this.desactivateDate = desactivateDate;
		this.coordinatorId = coordinatorId;
		this.status = status;
		this.cityId = cityId;
		this.districtId = districtId;
		this.coordinator = coordinator;
		this.city = city;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "events"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "activistId", unique = true, nullable = false)
	public Integer getActivistId() {
		return this.activistId;
	}

	public void setActivistId(Integer activistId) {
		this.activistId = activistId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Event getEvents() {
		return this.event;
	}

	public void setEvents(Event event) {
		this.event = event;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Phone getPhones() {
		return this.phone;
	}

	public void setPhones(Phone phone) {
		this.phone = phone;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Schedulewithdate getSchedulewithdate() {
		return this.schedulewithdate;
	}

	public void setSchedulewithdate(Schedulewithdate schedulewithdate) {
		this.schedulewithdate = schedulewithdate;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Schedulewithweekdays getSchedulewithweekdays() {
		return this.schedulewithweekdays;
	}

	public void setSchedulewithweekdays(
			Schedulewithweekdays schedulewithweekdays) {
		this.schedulewithweekdays = schedulewithweekdays;
	}

	@Column(name = "vkID")
	public Integer getVkId() {
		return this.vkId;
	}

	public void setVkId(Integer vkId) {
		this.vkId = vkId;
	}

	@Column(name = "fbId")
	public Integer getFbId() {
		return this.fbId;
	}

	public void setFbId(Integer fbId) {
		this.fbId = fbId;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "passwdHash", nullable = false, length = 100)
	public String getPasswdHash() {
		return this.passwdHash;
	}

	public void setPasswdHash(String passwdHash) {
		this.passwdHash = passwdHash;
	}

	@Column(name = "surname", nullable = false, length = 50)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "name1", nullable = false, length = 50)
	public String getName1() {
		return this.name1;
	}

	public void setName1(String name1) {
		this.name1 = name1;
	}

	@Column(name = "name2", length = 50)
	public String getName2() {
		return this.name2;
	}

	public void setName2(String name2) {
		this.name2 = name2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registrDate", nullable = false, length = 19)
	public Date getRegistrDate() {
		return this.registrDate;
	}

	public void setRegistrDate(Date registrDate) {
		this.registrDate = registrDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "activateDate", length = 19)
	public Date getActivateDate() {
		return this.activateDate;
	}

	public void setActivateDate(Date activateDate) {
		this.activateDate = activateDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "desactivateDate", length = 19)
	public Date getDesactivateDate() {
		return this.desactivateDate;
	}

	public void setDesactivateDate(Date desactivateDate) {
		this.desactivateDate = desactivateDate;
	}

	@Column(name = "coordinatorId", unique = true, nullable = false)
	public int getCoordinatorId() {
		return this.coordinatorId;
	}

	public void setCoordinatorId(int coordinatorId) {
		this.coordinatorId = coordinatorId;
	}

	@Column(name = "STATUS")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Column(name = "cityId", unique = true)
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}

	@Column(name = "districtId")
	public Integer getDistrictId() {
		return this.districtId;
	}

	public void setDistrictId(Integer districtId) {
		this.districtId = districtId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "activists")
	public Coordinator getCoordinators() {
		return this.coordinator;
	}

	public void setCoordinators(Coordinator coordinator) {
		this.coordinator = coordinator;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "activists")
	public City getCities() {
		return this.city;
	}

	public void setCities(City city) {
		this.city = city;
	}

}
