package ru.xaptenodytes.activizm.model;

// Generated 18.05.2015 14:47:17 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Coordinators generated by hbm2java
 */
@Entity
@Table(name = "coordinators", catalog = "activizm", uniqueConstraints = @UniqueConstraint(columnNames = "cityId"))
public class Coordinators implements java.io.Serializable {

	private Integer coordinatorId;
	private Activists activists;
	private Subcommunities subcommunities;
	private Integer vkId;
	private Integer fbId;
	private String email;
	private String passwdHash;
	private String surname;
	private String name1;
	private String name2;
	private Date registrDate;
	private Date activateDate;
	private Date desactivateDate;
	private Integer cityId;
	private Set eventses = new HashSet(0);
	private Cities cities;

	public Coordinators() {
	}

	public Coordinators(Activists activists, Subcommunities subcommunities,
			String passwdHash, String surname, String name1, Date registrDate) {
		this.activists = activists;
		this.subcommunities = subcommunities;
		this.passwdHash = passwdHash;
		this.surname = surname;
		this.name1 = name1;
		this.registrDate = registrDate;
	}

	public Coordinators(Activists activists, Subcommunities subcommunities,
			Integer vkId, Integer fbId, String email, String passwdHash,
			String surname, String name1, String name2, Date registrDate,
			Date activateDate, Date desactivateDate, Integer cityId,
			Set eventses, Cities cities) {
		this.activists = activists;
		this.subcommunities = subcommunities;
		this.vkId = vkId;
		this.fbId = fbId;
		this.email = email;
		this.passwdHash = passwdHash;
		this.surname = surname;
		this.name1 = name1;
		this.name2 = name2;
		this.registrDate = registrDate;
		this.activateDate = activateDate;
		this.desactivateDate = desactivateDate;
		this.cityId = cityId;
		this.eventses = eventses;
		this.cities = cities;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "activists"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "coordinatorId", unique = true, nullable = false)
	public Integer getCoordinatorId() {
		return this.coordinatorId;
	}

	public void setCoordinatorId(Integer coordinatorId) {
		this.coordinatorId = coordinatorId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Activists getActivists() {
		return this.activists;
	}

	public void setActivists(Activists activists) {
		this.activists = activists;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subcomunityId", nullable = false)
	public Subcommunities getSubcommunities() {
		return this.subcommunities;
	}

	public void setSubcommunities(Subcommunities subcommunities) {
		this.subcommunities = subcommunities;
	}

	@Column(name = "vkID")
	public Integer getVkId() {
		return this.vkId;
	}

	public void setVkId(Integer vkId) {
		this.vkId = vkId;
	}

	@Column(name = "fbId")
	public Integer getFbId() {
		return this.fbId;
	}

	public void setFbId(Integer fbId) {
		this.fbId = fbId;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "passwdHash", nullable = false, length = 100)
	public String getPasswdHash() {
		return this.passwdHash;
	}

	public void setPasswdHash(String passwdHash) {
		this.passwdHash = passwdHash;
	}

	@Column(name = "surname", nullable = false, length = 50)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "name1", nullable = false, length = 50)
	public String getName1() {
		return this.name1;
	}

	public void setName1(String name1) {
		this.name1 = name1;
	}

	@Column(name = "name2", length = 50)
	public String getName2() {
		return this.name2;
	}

	public void setName2(String name2) {
		this.name2 = name2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registrDate", nullable = false, length = 19)
	public Date getRegistrDate() {
		return this.registrDate;
	}

	public void setRegistrDate(Date registrDate) {
		this.registrDate = registrDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "activateDate", length = 19)
	public Date getActivateDate() {
		return this.activateDate;
	}

	public void setActivateDate(Date activateDate) {
		this.activateDate = activateDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "desactivateDate", length = 19)
	public Date getDesactivateDate() {
		return this.desactivateDate;
	}

	public void setDesactivateDate(Date desactivateDate) {
		this.desactivateDate = desactivateDate;
	}

	@Column(name = "cityId", unique = true)
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coordinators")
	public Set getEventses() {
		return this.eventses;
	}

	public void setEventses(Set eventses) {
		this.eventses = eventses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "activists")
	public Cities getCities() {
		return this.cities;
	}

	public void setCities(Cities cities) {
		this.cities = cities;
	}

}
