package ru.xaptenodytes.activizm.model;

// Generated 19.05.2015 16:37:34 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Events generated by hbm2java
 */
@Entity
@Table(name = "events", catalog = "activizm", uniqueConstraints = {
		@UniqueConstraint(columnNames = "activistId"),
		@UniqueConstraint(columnNames = "cityId"),
		@UniqueConstraint(columnNames = "requersterId") })
public class Event implements java.io.Serializable {

	private Integer eventId;
	private Coordinator coordinator;
	private Eventtype eventtype;
	private int requersterId;
	private Integer activistId;
	private Date eventStartDate;
	private double departurePointX;
	private double departurePointY;
	private Double arrivalPointX;
	private Double arrivalPointY;
	private String comment;
	private Boolean status1;
	private Date eventEndDate;
	private String commentEnd;
	private Integer cityId;
	private Activist activist;
	private Requester requester;
	private City city;

	public Event() {
	}

	public Event(int requersterId, Date eventStartDate,
			double departurePointX, double departurePointY) {
		this.requersterId = requersterId;
		this.eventStartDate = eventStartDate;
		this.departurePointX = departurePointX;
		this.departurePointY = departurePointY;
	}

	public Event(Coordinator coordinator, Eventtype eventtype,
			int requersterId, Integer activistId, Date eventStartDate,
			double departurePointX, double departurePointY,
			Double arrivalPointX, Double arrivalPointY, String comment,
			Boolean status1, Date eventEndDate, String commentEnd,
			Integer cityId, Activist activist, Requester requester,
			City city) {
		this.coordinator = coordinator;
		this.eventtype = eventtype;
		this.requersterId = requersterId;
		this.activistId = activistId;
		this.eventStartDate = eventStartDate;
		this.departurePointX = departurePointX;
		this.departurePointY = departurePointY;
		this.arrivalPointX = arrivalPointX;
		this.arrivalPointY = arrivalPointY;
		this.comment = comment;
		this.status1 = status1;
		this.eventEndDate = eventEndDate;
		this.commentEnd = commentEnd;
		this.cityId = cityId;
		this.activist = activist;
		this.requester = requester;
		this.city = city;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "eventId", unique = true, nullable = false)
	public Integer getEventId() {
		return this.eventId;
	}

	public void setEventId(Integer eventId) {
		this.eventId = eventId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "coordinatorId")
	public Coordinator getCoordinators() {
		return this.coordinator;
	}

	public void setCoordinators(Coordinator coordinator) {
		this.coordinator = coordinator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EventTypeId")
	public Eventtype getEventtype() {
		return this.eventtype;
	}

	public void setEventtype(Eventtype eventtype) {
		this.eventtype = eventtype;
	}

	@Column(name = "requersterId", unique = true, nullable = false)
	public int getRequersterId() {
		return this.requersterId;
	}

	public void setRequersterId(int requersterId) {
		this.requersterId = requersterId;
	}

	@Column(name = "activistId", unique = true)
	public Integer getActivistId() {
		return this.activistId;
	}

	public void setActivistId(Integer activistId) {
		this.activistId = activistId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "eventStartDate", nullable = false, length = 19)
	public Date getEventStartDate() {
		return this.eventStartDate;
	}

	public void setEventStartDate(Date eventStartDate) {
		this.eventStartDate = eventStartDate;
	}

	@Column(name = "departurePointX", nullable = false, precision = 22, scale = 0)
	public double getDeparturePointX() {
		return this.departurePointX;
	}

	public void setDeparturePointX(double departurePointX) {
		this.departurePointX = departurePointX;
	}

	@Column(name = "departurePointY", nullable = false, precision = 22, scale = 0)
	public double getDeparturePointY() {
		return this.departurePointY;
	}

	public void setDeparturePointY(double departurePointY) {
		this.departurePointY = departurePointY;
	}

	@Column(name = "arrivalPointX", precision = 22, scale = 0)
	public Double getArrivalPointX() {
		return this.arrivalPointX;
	}

	public void setArrivalPointX(Double arrivalPointX) {
		this.arrivalPointX = arrivalPointX;
	}

	@Column(name = "arrivalPointY", precision = 22, scale = 0)
	public Double getArrivalPointY() {
		return this.arrivalPointY;
	}

	public void setArrivalPointY(Double arrivalPointY) {
		this.arrivalPointY = arrivalPointY;
	}

	@Column(name = "comment", length = 500)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "STATUS1")
	public Boolean getStatus1() {
		return this.status1;
	}

	public void setStatus1(Boolean status1) {
		this.status1 = status1;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "eventEndDate", length = 19)
	public Date getEventEndDate() {
		return this.eventEndDate;
	}

	public void setEventEndDate(Date eventEndDate) {
		this.eventEndDate = eventEndDate;
	}

	@Column(name = "commentEnd", length = 500)
	public String getCommentEnd() {
		return this.commentEnd;
	}

	public void setCommentEnd(String commentEnd) {
		this.commentEnd = commentEnd;
	}

	@Column(name = "cityId", unique = true)
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "events")
	public Activist getActivists() {
		return this.activist;
	}

	public void setActivists(Activist activist) {
		this.activist = activist;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "events")
	public Requester getRequester() {
		return this.requester;
	}

	public void setRequester(Requester requester) {
		this.requester = requester;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "activists")
	public City getCities() {
		return this.city;
	}

	public void setCities(City city) {
		this.city = city;
	}

}
