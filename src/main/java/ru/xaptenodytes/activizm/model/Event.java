package ru.xaptenodytes.activizm.model;

// Generated 24.05.2015 22:32:50 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Events generated by hbm2java
 */
@Entity
@Table(name = "events", catalog = "activizm", uniqueConstraints = @UniqueConstraint(columnNames = "cityId"))
public class Event implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4782381012360194424L;
	private Integer eventId;
	private Eventtype eventtype;
	private Date eventStartDate;
	private double departurePointX;
	private double departurePointY;
	private Double arrivalPointX;
	private Double arrivalPointY;
	private String comment;
	private Boolean status1;
	private Date eventEndDate;
	private String commentEnd;
	private Integer cityId;
	private Set<Userroleevent> userroleeventses = new HashSet<>(0);
	private City city;

	public Event() {
	}

	public Event(Date eventStartDate, double departurePointX,
			double departurePointY) {
		this.eventStartDate = eventStartDate;
		this.departurePointX = departurePointX;
		this.departurePointY = departurePointY;
	}

	public Event(Eventtype eventtype, Date eventStartDate,
			double departurePointX, double departurePointY,
			Double arrivalPointX, Double arrivalPointY, String comment,
			Boolean status1, Date eventEndDate, String commentEnd,
			Integer cityId, Set<Userroleevent> userroleeventses, City city) {
		this.eventtype = eventtype;
		this.eventStartDate = eventStartDate;
		this.departurePointX = departurePointX;
		this.departurePointY = departurePointY;
		this.arrivalPointX = arrivalPointX;
		this.arrivalPointY = arrivalPointY;
		this.comment = comment;
		this.status1 = status1;
		this.eventEndDate = eventEndDate;
		this.commentEnd = commentEnd;
		this.cityId = cityId;
		this.userroleeventses = userroleeventses;
		this.city = city;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "eventId", unique = true, nullable = false)
	public Integer getEventId() {
		return this.eventId;
	}

	public void setEventId(Integer eventId) {
		this.eventId = eventId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EventTypeId")
	public Eventtype getEventtype() {
		return this.eventtype;
	}

	public void setEventtype(Eventtype eventtype) {
		this.eventtype = eventtype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "eventStartDate", nullable = false, length = 19)
	public Date getEventStartDate() {
		return this.eventStartDate;
	}

	public void setEventStartDate(Date eventStartDate) {
		this.eventStartDate = eventStartDate;
	}

	@Column(name = "departurePointX", nullable = false, precision = 22, scale = 0)
	public double getDeparturePointX() {
		return this.departurePointX;
	}

	public void setDeparturePointX(double departurePointX) {
		this.departurePointX = departurePointX;
	}

	@Column(name = "departurePointY", nullable = false, precision = 22, scale = 0)
	public double getDeparturePointY() {
		return this.departurePointY;
	}

	public void setDeparturePointY(double departurePointY) {
		this.departurePointY = departurePointY;
	}

	@Column(name = "arrivalPointX", precision = 22, scale = 0)
	public Double getArrivalPointX() {
		return this.arrivalPointX;
	}

	public void setArrivalPointX(Double arrivalPointX) {
		this.arrivalPointX = arrivalPointX;
	}

	@Column(name = "arrivalPointY", precision = 22, scale = 0)
	public Double getArrivalPointY() {
		return this.arrivalPointY;
	}

	public void setArrivalPointY(Double arrivalPointY) {
		this.arrivalPointY = arrivalPointY;
	}

	@Column(name = "comment", length = 500)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "STATUS1")
	public Boolean getStatus1() {
		return this.status1;
	}

	public void setStatus1(Boolean status1) {
		this.status1 = status1;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "eventEndDate", length = 19)
	public Date getEventEndDate() {
		return this.eventEndDate;
	}

	public void setEventEndDate(Date eventEndDate) {
		this.eventEndDate = eventEndDate;
	}

	@Column(name = "commentEnd", length = 500)
	public String getCommentEnd() {
		return this.commentEnd;
	}

	public void setCommentEnd(String commentEnd) {
		this.commentEnd = commentEnd;
	}

	@Column(name = "cityId", unique = true)
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "events")
	public Set<Userroleevent> getUserroleeventses() {
		return this.userroleeventses;
	}

	public void setUserroleeventses(Set<Userroleevent> userroleeventses) {
		this.userroleeventses = userroleeventses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "events")
	public City getCities() {
		return this.city;
	}

	public void setCities(City city) {
		this.city = city;
	}

}
