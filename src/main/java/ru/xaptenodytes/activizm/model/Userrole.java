package ru.xaptenodytes.activizm.model;

// Generated 24.05.2015 22:32:50 by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Userroles generated by hbm2java
 */
@Entity
@Table(name = "userroles", catalog = "activizm", uniqueConstraints = @UniqueConstraint(columnNames = "roleId"))
public class Userrole implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2535133450121840659L;
	private Integer userroleId;
	private Areaofresponsibility areaofresponsibility;
	private Userroleevent userroleevent;
	private User user;
	private int roleId;
	private Role role;

	public Userrole() {
	}

	public Userrole(Areaofresponsibility areaofresponsibility,
			Userroleevent userroleevent, User user, int roleId) {
		this.areaofresponsibility = areaofresponsibility;
		this.userroleevent = userroleevent;
		this.user = user;
		this.roleId = roleId;
	}

	public Userrole(Areaofresponsibility areaofresponsibility,
			Userroleevent userroleevent, User user, int roleId, Role role) {
		this.areaofresponsibility = areaofresponsibility;
		this.userroleevent = userroleevent;
		this.user = user;
		this.roleId = roleId;
		this.role = role;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "areaofresponsibility"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "userroleId", unique = true, nullable = false)
	public Integer getUserroleId() {
		return this.userroleId;
	}

	public void setUserroleId(Integer userroleId) {
		this.userroleId = userroleId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Areaofresponsibility getAreaofresponsibility() {
		return this.areaofresponsibility;
	}

	public void setAreaofresponsibility(
			Areaofresponsibility areaofresponsibility) {
		this.areaofresponsibility = areaofresponsibility;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Userroleevent getUserroleevents() {
		return this.userroleevent;
	}

	public void setUserroleevents(Userroleevent userroleevent) {
		this.userroleevent = userroleevent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userId", nullable = false)
	public User getUsers() {
		return this.user;
	}

	public void setUsers(User user) {
		this.user = user;
	}

	@Column(name = "roleId", unique = true, nullable = false)
	public int getRoleId() {
		return this.roleId;
	}

	public void setRoleId(int roleId) {
		this.roleId = roleId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userroles")
	public Role getRoles() {
		return this.role;
	}

	public void setRoles(Role role) {
		this.role = role;
	}

}
